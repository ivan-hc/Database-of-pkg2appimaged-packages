#!/bin/sh

APP=sunvox

export ARCH="x86_64"

# DEPENDENCIES

dependencies="unzip"
for d in $dependencies; do
	if ! command -v "$d" 1>/dev/null; then
		echo "ERROR: missing command \"d\", install the above and retry" && exit 1
	fi
done

_appimagetool() {
	if ! command -v appimagetool 1>/dev/null; then
		[ ! -f ./appimagetool ] && echo " Downloading appimagetool..." && curl -#Lo appimagetool https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-"$ARCH".AppImage && chmod a+x ./appimagetool
		./appimagetool "$@"
	else
		appimagetool "$@"
	fi
}

# CREATE DIRECTORIES
mkdir -p tmp/"$APP".AppDir && cd tmp || exit 1

# DOWNLOAD AND EXTRACT
pkg_name=$(curl -Ls https://warmplace.ru/soft/sunvox/ | tr '"<> ' '\n' | grep "zip" | head -1)

if [ ! -f ./*.zip ]; then
	wget -q "https://warmplace.ru/soft/sunvox/$(curl -Ls https://warmplace.ru/soft/sunvox/ | tr '"<> ' '\n' | grep "zip" | head -1)" || exit 1
	unzip -qq ./*.zip
fi

VERSION=$(ls . | grep "zip" | grep -Eo "[0-9].*.zip" | sed 's/\.zip//g')

cp -r ./sunvox/sunvox/linux_x86_64/sunvox "$APP".AppDir/

# APPRUN
rm -f "$APP".AppDir/AppRun
cat >> "$APP".AppDir/AppRun << 'EOF'
#!/bin/sh
HERE="$(dirname "$(readlink -f "${0}")")"
exec ${HERE}/sunvox "$@"
EOF
chmod a+x "$APP".AppDir/AppRun

# LAUNCHER
echo "[Desktop Entry]
Version=1.0
Type=Application
Name=Sunvox
GenericName=Modular Synthesizer / Tracker
Comment=Small, fast and powerful modular synthesizer with pattern-based sequencer (tracker).
Exec=sunvox %f
Icon=sunvox
Terminal=false
StartupNotify=false
MimeType=application/x-sunvox-project;application/x-sunvox-instrument;
Categories=Audio;AudioVideo;Music;Sequencer;" > "$APP".AppDir/"$APP".desktop

# ICON
if [ ! -f "$APP".AppDir/"$APP".png ]; then
	wget -q https://warmplace.ru/soft/sunvox/images/icon.png -O "$APP".AppDir/"$APP".png || exit 1
fi

# CONVERT THE APPDIR TO AN APPIMAGE

APPNAME=$(cat "$APP".AppDir/*.desktop | grep '^Name=' | head -1 | cut -c 6- | sed 's/ /-/g')
REPO="Database-of-pkg2appimaged-packages"
TAG="sunvox"

UPINFO="gh-releases-zsync|$GITHUB_REPOSITORY_OWNER|$REPO|$TAG|*x86_64.AppImage.zsync"

ARCH=x86_64 _appimagetool -u "$UPINFO" \
	"$APP".AppDir "$APPNAME"_"$VERSION"-x86_64.AppImage

if ! test -f ./*.AppImage; then
	echo "No AppImage available."; exit 1
fi
cd .. && mv ./tmp/*.AppImage* . && chmod a+x ./*.AppImage || exit 1
